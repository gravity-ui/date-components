name: PR Preview Deploy 2

on:
  workflow_run:
    workflows: ['PR Preview Build']
    types:
      - completed

jobs:
  deploy:
    name: Deploy
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GRAVITY_UI_BOT_GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: Extract PR Number
        id: pr
        run: echo "::set-output name=id::$(<pr/pr-id.txt)"
        shell: bash
      - name: Install AWS CLI
        run: |
          $workdir="2.22.35"
          mkdir -p "$workdir"
          cd "$workdir"
          curl -I -sL "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-2.22.35.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          aws_path=$(which aws || true)
          [[ -n "$aws_path" ]] && msg_log "aws_path = ${aws_path}"
          if [[ "$aws_path" =~ ^qemu-aarch64.* ]]; then
              msg_error "Failed to install AWS CLI - Make sure AWS_CLI_ARCH is set properly, current value is ${provided_arch}"
          elif [[ "$aws_path" =~ ^.*aws.*not.*found || -z "$aws_path" ]]; then
              # Fresh install
              ./aws/install --bin-dir "$_BINDIR" --install-dir "${_INSTALLROOTDIR}/aws-cli"
          else
              # Update
              ./aws/install --bin-dir "$_BINDIR" --install-dir "${_INSTALLROOTDIR}/aws-cli" --update
          fi
          test_results="$(aws --version 2>&1 || true)"
          if [[ "$test_results" =~ ^aws-cli/.*  ]]; then
              echo "$test_results"
          else
              msg_error "Installation failed - ${test_results}"
              if [[ "$test_results" =~ ^qemu-aarch64.*Could.*not.*open ]]; then
                  msg_log "Make sure AWS_CLI_ARCH is set properly, current value is - ${provided_arch}"
              fi        
          fi
          [[ -d "$workdir" ]] && rm -r "$workdir"
        shell: bash
      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.STORYBOOK_S3_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.STORYBOOK_S3_SECRET_KEY }}
          AWS_DEFAULT_REGION: ru-central1
          AWS_EC2_METADATA_DISABLED: true
        run: aws s3 cp static s3://storybook-static/date-components/pulls/${{ steps.pr.outputs.id }}/ --endpoint-url=https://storage.yandexcloud.net --recursive --debug
        shell: bash
      - name: Create Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GRAVITY_UI_BOT_GITHUB_TOKEN }}
          number: ${{ steps.pr.outputs.id }}
          message: '[Preview](https://preview.gravity-ui.com/date-components/${{ steps.pr.outputs.id }}/) is ready.'
